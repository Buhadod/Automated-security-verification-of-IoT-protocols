theory DDoS
 begin

/*
 * Protocol:	  DDoS protocol  
 * Modeler: 	 Jun Young Kim 
 * Described in: 
 * Date: 	 
 *
 * Status: 	 Working
 */

builtins: symmetric-encryption, hashing, diffie-hellman,signing 
// Public key infrastructure 
rule Register_pk: 
	[ Fr(~ltkA) ] --> 
	[ !Ltk($A, ~ltkA) , !Pk($A, pk(~ltkA)) , Out(pk(~ltkA)) ]
// Compromising an agent's long-term key 
rule Reveal_ltk: [ !Ltk(A, ltkA) ] --[ Reveal(A) ]-> [ Out(ltkA) ]

// Role A sends first message 
rule A_1_send: 
	let m = <A, ~na> 
	in [ Fr(~na) , !Ltk(A, ltkA) , !Pk(B, pkB) ]
	--[ Send(A, m) ]-> 
	[ St_A_1(A, ltkA, pkB, B, ~na) , Out(<m,sign(m,ltkA)>)]

rule Adversary_DoS_Attack:
	[Fr(~ltkAD), In(<m,sig>)]
	-->
	[Out(<m,sign(m,~ltkAD)>)]
	
// Role B receives first message 
rule B_1_receive: 
	let 
	Expensive_operation = sign(sig, ltkB)
	in
	[ !Ltk(B, ltkB) , !Pk(A, pkA) , In(<m,sig>) ]
	--[ Recv(B, m),  OnlyOnce(), Eq(verify(sig,m,pkA),true) , DoSProtection(A,m), Honest(B), Honest(A)]-> 
	[ St_B_1(B, ltkB, pkA, A, m), Out(Expensive_operation)]

axiom Equality: 
	"All x y #i. Eq(x,y) @i ==> x = y"
	
axiom Inequality: 
	"All x #i. Neq(x,x) @ i ==> F"

axiom OnlyOnce: 
	"All #i #j. OnlyOnce()@i & OnlyOnce()@j ==> #i = #j"


lemma executable: exists-trace
	"Ex A B m #i #j. Send(A,m)@i & Recv(B,m) @j"
	
//lemma message_authentication: 
lemma Dos_protection: 
	"All b m #i. DoSProtection(b,m) @i ==> (Ex #j. Send(b,m) @j & j<i) | (Ex B #r. Reveal(B)@r & Honest(B) @i & r < i)"
end